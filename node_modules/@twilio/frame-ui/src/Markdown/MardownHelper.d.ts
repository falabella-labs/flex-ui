import { Markdown, ShortcutInputElement, KeyboardShortcuts } from "./MarkdownHelper.definitions";
/**
 * @class MarkdownHelperImpl
 * @private
 * @classdesc Markdown Helper. Access the instance using {@link MarkdownHelper}.
 * @hideconstructor
 */
declare class MarkdownHelperImpl {
    private spaceRegex;
    private oneOrMoreOfSingleCharRegex;
    private zeroOrMoreOfSingleCharRegex;
    private markdown;
    constructor(markdown: Markdown);
    private getSyntaxForShortcut;
    private getSyntaxRegExp;
    private getMarkdownItemRegExp;
    /**
     * Returns markdown regular expression
     * @returns {string} string containing the regular expression of all elements supported
     */
    getMarkdownRegExp(): string;
    /**
     * Transforms input for the given shortcut id
     * @param {string} shortCutId shortcut id see {@link MarkdownHelper.MarkdownItem}
     * @param {MarkdownHelper.ShortcutInputElement} inputElement input element in which the shortcut was pressed
     * @returns {MarkdownHelper.ShortcutInputElement} modified input element or the inputElement param if no changes were made
     */
    transformElementWithShortcutSyntax(shortCutId: string, inputElement: ShortcutInputElement): ShortcutInputElement;
    /**
     * Returns currently supported keyboard shortcuts
     * @returns {MarkdownHelper.KeyboardShortcuts} keyboard shortcuts
     */
    getKeyboardShortcuts(): KeyboardShortcuts;
}
/**
 * An instance of Markdown Helper
 *
 * @private
 * @name MarkdownHelper
 * @type {MarkdownHelperImpl}
 */
export declare const MarkdownHelper: MarkdownHelperImpl;
export {};
